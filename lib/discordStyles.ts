import discord from "../styles/discord";

export type DsString = string | undefined;
type DsStrings = DsString[];

const app0: DsStrings = ["app-3xd6d0"];
const app1: DsStrings = ["app-2CXKsg"];
const layers0: DsStrings = ["layers-OrUESM"];
const layers1: DsStrings = ["layers-1YQhyW"];
const appMount: DsStrings = ["appMount-2yBXZl"];
const bg: DsStrings = ["bg-1QIAus"];
const typeWindows: DsStrings = ["typeWindows-2-g3UY"];
const withFrame: DsStrings = ["withFrame-2dL45i"];
const titleBar: DsStrings = ["titleBar-1it3bQ"];
const horizontalReverse: DsStrings = ["horizontalReverse-2QssvL"];
const flex: DsStrings = ["flex-3BkGQD"];
const directionRowReverse: DsStrings = ["directionRowReverse-HZatnx"];
const justifyStart: DsStrings = ["justifyStart-2Mwniq"];
const alignStretch: DsStrings = ["alignStretch-Uwowzr"];
const wordmarkWindows: DsStrings = ["wordmarkWindows-2dq6rw"];
const wordmark: DsStrings = ["wordmark-2u86JB"];
const winButtonClose: DsStrings = ["winButtonClose-3Q8ZH5"];
const winButtonMinMax: DsStrings = ["winButtonMinMax-3RsPUg"];
const winButton: DsStrings = ["winButton-3UMjdg"];
const flexCenter: DsStrings = ["flexCenter-1Mwsxg"];
const justifyCenter: DsStrings = ["justifyCenter-rrurWZ"];
const alignCenter: DsStrings = ["alignCenter-14kD11"];
const layer: DsStrings = ["layer-86YKbF"];
const standardSidebarView: DsStrings = ["standardSidebarView-E9Pc3j"];
const sidebarRegion: DsStrings = ["sidebarRegion-1VBisG"];
const sidebarRegionScroller: DsStrings = ["sidebarRegionScroller-FXiQOh"];
const thin: DsStrings = ["thin-31rlnD"];
const scrollerBase: DsStrings = ["scrollerBase-_bVAAt"];
const fade: DsStrings = ["fade-1R6FHN"];
const sidebar: DsStrings = ["sidebar-nqHbhN"];
const side: DsStrings = ["side-2ur1Qk"];
const contentRegion: DsStrings = ["contentRegion-3HkfJJ"];
const contentRegionScroller: DsStrings = ["contentRegionScroller-2_GT_N"];
const contentRegionShownSidebar: DsStrings = ["contentRegionShownSidebar-fHXkEg"];
const auto: DsStrings = ["auto-2K3UW5"];
const header: DsStrings = ["header-2Kx1US"];
const eyebrow: DsStrings = ["eyebrow-Ejf06y", "eyebrow-1Shfyi"];
const item: DsStrings = ["item-3XjbnG"];
const themed: DsStrings = ["themed-2-lozF"];
const selected: DsStrings = ["selected-g-kMVV"];
const separator: DsStrings = ["separator-2wx7h6"];
const socialLinks: DsStrings = ["socialLinks-3ywLUf"];
const anchor: DsStrings = ["anchor-1X4H4q", "anchor-1MIwyf"];
const anchorUnderlineOnHover: DsStrings = ["anchorUnderlineOnHover-wiZFZ_", "anchorUnderlineOnHover-2qPutX"];
const link: DsStrings = ["link-1-SDSV"];
const textXsNormal: DsStrings = ["text-xs-normal-3SiVjE", "text-xs-normal-3O7EaX"];
const line: DsStrings = ["line-18uChy"];
const info: DsStrings = ["info-3pQQBb"];
const sectionTitle: DsStrings = ["sectionTitle-3j2YI1", "sectionTitle-LdcnyP"];
const h1: DsStrings = ["h1-34Txb0", "h1-3iMExa"];
const title: DsStrings = ["title-3hptVQ", "title-lXcL8p"];
const defaultColor: DsStrings = ["defaultColor-2cKwKo", "defaultColor-3Olr-9"];
const defaultMarginh1: DsStrings = ["defaultMarginh1-EURXsm", "defaultMarginh1-1UYutH"];
const contentColumn: DsStrings = ["contentColumn-1C7as6"];
const contentColumnDefault: DsStrings = ["contentColumnDefault-3eyv5o"];
const container: DsStrings = ["container-1zDvAE", "container-31PmuA "];
const marginTop8: DsStrings = ["marginTop8-24uXGp"];
const marginBottom20: DsStrings = ["marginBottom20-315RVT"];
const textMdNormal: DsStrings = ["text-md-normal-304U3g", "text-md-normal-2rFCH3"];
const children: DsStrings = ["children-1xdcWE", "children-2C96Ex"];
const divider: DsStrings = ["divider-_0um2u", "divider-3nqZNm"];
const marginTop20: DsStrings = ["marginTop20-2T8ZJx"];
const note: DsStrings = ["note-2C4pGr", "note-3SS3a9"];
const colorStandard: DsStrings = ["colorStandard-1Xxp1s"];
const size14: DsStrings = ["size14-k_3Hy4"];
const description: DsStrings = ["description-30xx7u", "description-foE_WP"];
const formText: DsStrings = ["formText-2ngGjI", "formText-2UzJT0"];
const modeDefault: DsStrings = ["modeDefault-2fEh7a", "modeDefault-3Warim"];
const labelRow: DsStrings = ["labelRow-2jl9gK", "labelRow-NnoUIp"];
const dividerDefault: DsStrings = ["dividerDefault-3C2-ws", "dividerDefault-wIfHHD"];
const h5: DsStrings = ["h5-2RwDNl", "h5-2feg8J"];
const defaultMarginh5: DsStrings = ["defaultMarginh5-3Jxf6f", "defaultMarginh5-3THN2O"];
const labelTitle: DsStrings = ["title-2dsDLn", "title-2yADjX"];
const marginBottom8: DsStrings = ["marginBottom8-emkd0_"];
const control: DsStrings = ["control-1fl03-", "control-10qYax"];
const controlContainer: DsStrings = ["container-1QtPKm", "container-2nx-BQ"]; // newer one first idk why
const defaultColors: DsStrings = ["default-colors"];
const checked: DsStrings = ["checked-25WXMf", "checked-16gMAN"];
const input: DsStrings = ["input-2XRLou", "input-125oad"];
const slider: DsStrings = ["slider-32CRPX", "slider-HJFN2i"];
const betaTagContainer: DsStrings = ["betaTagContainer-1ZAPyL"];
const dependentSetting: DsStrings = ["dependentSetting-2ewJ4W"];
const betaTagIcon: DsStrings = ["betaTagIcon-BgmWbF"];
const testBadge: DsStrings = ["textBadge-1fdDPJ"];
const base: DsStrings = ["base-3IDx3L"];
const badgeEyebrow: DsStrings = ["eyebrow-132Xza"];
const baseShapeRound: DsStrings = ["baseShapeRound-3epLEv"];
const radioItem: DsStrings = ["item-1TA5qI", "item-2idW98"]; // newer one first idk why
const horizontal: DsStrings = ["horizontal-1Piu5-"];
const radioFlex: DsStrings = ["flex-3BkGQD"];
const directionRow: DsStrings = ["directionRow-2Iu2A9"];
const itemFilled: DsStrings = ["itemFilled-1cPbtg"];
const radioBar: DsStrings = ["radioBar-3w9XY-", "radioBar-1XgZqD"];
const radioInfo: DsStrings = ["info-2FZci4", "info-3cKxwI"];
const textMdMedium: DsStrings = ["text-md-medium-2avxhQ", "text-md-medium-2n7Vn5"];
const radioPositionLeft: DsStrings = ["radioPositionLeft-28JJUE", "radioPositionLeft-27wZ8M"];

export function initializeDiscordStyles(css: string): boolean {
    let errored = false;

    function validate(classes: DsStrings) {
        for (const className of classes) {
            if (!className) continue;
            if (css.includes(className)) return className;
        }

        console.error(`Could not find a valid class name for ${classes.join(", ")}`);
        errored = true;
    }

    discord.app0 = validate(app0);
    discord.app1 = validate(app1);
    discord.layers0 = validate(layers0);
    discord.layers1 = validate(layers1);
    discord.appMount = validate(appMount);
    discord.bg = validate(bg);
    discord.typeWindows = validate(typeWindows);
    discord.withFrame = validate(withFrame);
    discord.titleBar = validate(titleBar);
    discord.horizontalReverse = validate(horizontalReverse);
    discord.flex = validate(flex);
    discord.directionRowReverse = validate(directionRowReverse);
    discord.justifyStart = validate(justifyStart);
    discord.alignStretch = validate(alignStretch);
    discord.wordmarkWindows = validate(wordmarkWindows);
    discord.wordmark = validate(wordmark);
    discord.winButtonClose = validate(winButtonClose);
    discord.winButtonMinMax = validate(winButtonMinMax);
    discord.winButton = validate(winButton);
    discord.flexCenter = validate(flexCenter);
    discord.justifyCenter = validate(justifyCenter);
    discord.alignCenter = validate(alignCenter);
    discord.layer = validate(layer);
    discord.standardSidebarView = validate(standardSidebarView);
    discord.sidebarRegion = validate(sidebarRegion);
    discord.sidebarRegionScroller = validate(sidebarRegionScroller);
    discord.thin = validate(thin);
    discord.scrollerBase = validate(scrollerBase);
    discord.fade = validate(fade);
    discord.sidebar = validate(sidebar);
    discord.side = validate(side);
    discord.contentRegion = validate(contentRegion);
    discord.contentRegionScroller = validate(contentRegionScroller);
    discord.contentRegionShownSidebar = validate(contentRegionShownSidebar);
    discord.auto = validate(auto);
    discord.header = validate(header);
    discord.eyebrow = validate(eyebrow);
    discord.item = validate(item);
    discord.themed = validate(themed);
    discord.selected = validate(selected);
    discord.separator = validate(separator);
    discord.socialLinks = validate(socialLinks);
    discord.anchor = validate(anchor);
    discord.anchorUnderlineOnHover = validate(anchorUnderlineOnHover);
    discord.link = validate(link);
    discord.textXsNormal = validate(textXsNormal);
    discord.line = validate(line);
    discord.info = validate(info);
    discord.sectionTitle = validate(sectionTitle);
    discord.h1 = validate(h1);
    discord.title = validate(title);
    discord.defaultColor = validate(defaultColor);
    discord.defaultMarginh1 = validate(defaultMarginh1);
    discord.contentColumn = validate(contentColumn);
    discord.contentColumnDefault = validate(contentColumnDefault);
    discord.container = validate(container);
    discord.marginTop8 = validate(marginTop8);
    discord.marginBottom20 = validate(marginBottom20);
    discord.textMdNormal = validate(textMdNormal);
    discord.children = validate(children);
    discord.divider = validate(divider);
    discord.marginTop20 = validate(marginTop20);
    discord.note = validate(note);
    discord.colorStandard = validate(colorStandard);
    discord.size14 = validate(size14);
    discord.description = validate(description);
    discord.formText = validate(formText);
    discord.modeDefault = validate(modeDefault);
    discord.labelRow = validate(labelRow);
    discord.dividerDefault = validate(dividerDefault);
    discord.h5 = validate(h5);
    discord.defaultMarginh5 = validate(defaultMarginh5);
    discord.labelTitle = validate(labelTitle);
    discord.marginBottom8 = validate(marginBottom8);
    discord.control = validate(control);
    discord.controlContainer = validate(controlContainer);
    discord.defaultColors = validate(defaultColors);
    discord.checked = validate(checked);
    discord.input = validate(input);
    discord.slider = validate(slider);
    discord.betaTagContainer = validate(betaTagContainer);
    discord.dependentSetting = validate(dependentSetting);
    discord.betaTagIcon = validate(betaTagIcon);
    discord.testBadge = validate(testBadge);
    discord.base = validate(base);
    discord.badgeEyebrow = validate(badgeEyebrow);
    discord.baseShapeRound = validate(baseShapeRound);
    discord.radioItem = validate(radioItem);
    discord.horizontal = validate(horizontal);
    discord.radioFlex = validate(radioFlex);
    discord.directionRow = validate(directionRow);
    discord.itemFilled = validate(itemFilled);
    discord.radioBar = validate(radioBar);
    discord.radioInfo = validate(radioInfo);
    discord.textMdMedium = validate(textMdMedium);
    discord.radioPositionLeft = validate(radioPositionLeft);

    return errored;
}
